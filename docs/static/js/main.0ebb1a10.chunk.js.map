{"version":3,"sources":["components/AddCategory.js","helpers/getGif.js","components/GridGifItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifEXpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setinputValue","input","useRef","useEffect","current","focus","onSubmit","e","preventDefault","trim","length","antCat","className","type","value","onChange","ref","placeholder","getGifs","termino","a","busqueda","encodeURI","url","fetch","results","json","data","gifs","map","img","id","title","images","downsized_medium","GridGifItem","src","alt","GifGrid","category","loading","state","setState","then","useFetchGifs","image","GifEXpertApp","categories","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kMAmCeA,MAjCf,YAAuC,IAAjBC,EAAgB,EAAhBA,cAClB,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KACMC,EAAQC,mBAkBd,OAJAC,qBAAU,WACNF,EAAMG,QAAQC,WAId,sBAAMC,SAbW,SAAAC,GACjBA,EAAEC,iBACET,EAAWU,OAAOC,OAAS,IAC3Bb,GAAe,SAAAc,GAAM,OAAKZ,GAAL,mBAAmBY,OACxCX,EAAe,MASWY,UAAU,SAAxC,SACI,uBACIC,KAAK,OACLC,MAAOf,EACPgB,SArBQ,WAChBf,EAAcC,EAAMG,QAAQU,QAqBpBE,IAAKf,EACLgB,YAAY,2C,uBC7BfC,EAAO,uCAAG,WAAOC,GAAP,yBAAAC,EAAA,6DACL,GACC,mCACTC,EAAWC,UAAUH,GACrBI,EAJa,iDAImCF,EAJnC,kBACL,GADK,oBAEJ,oCAFI,SAMGG,MAAMD,GANT,cAMbE,EANa,gBAOEA,EAAQC,OAPV,uBAOZC,EAPY,EAOZA,KAEDC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC1B,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXT,IAAG,UAAEO,EAAIG,cAAN,aAAE,EAAYC,iBAAiBX,QAbvB,kBAiBZK,GAjBY,4CAAH,sDCWLO,MATf,YAAmC,IAAbZ,EAAY,EAAZA,IAAIS,EAAQ,EAARA,MACtB,OACI,sBAAKpB,UAAU,YAAf,UACI,qBAAKwB,IAAKb,EAAKc,IAAKL,IACpB,4BAAIA,QC0BDM,MA3Bf,YAA8B,IAAZC,EAAW,EAAXA,SACd,ECHwB,SAACA,GACzB,MAA0BzC,mBAAS,CAC/B6B,KAAM,GACNa,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAeA,OAVAvC,qBAAU,WACNe,EAAQqB,GACHI,MAAK,SAAAV,GACFS,EAAS,CACLf,KAAMM,EACNO,SAAS,SAGtB,IAEIC,EDbuBG,CAAaL,GAA/BN,EAAZ,EAAON,KAAYa,EAAnB,EAAmBA,QAEnB,OACI,sBAAK5B,UAAU,iBAAf,UACI,uBACA,6BAAK2B,IACL,uBACEC,EACE,6CAEA,qBAAK5B,UAAU,eAAf,SAEQqB,EAAOJ,KAAI,SAACgB,GAAD,OACP,cAAC,EAAD,CAEItB,IAAKsB,EAAMtB,IACXS,MAAOa,EAAMb,OAFRa,EAAMd,aEC5Be,MAjBf,WACI,MAAoChD,mBAAS,CAAC,cAA9C,mBAAOiD,EAAP,KAAmBlD,EAAnB,KACA,OACI,sBAAKe,UAAU,gBAAf,UACI,8CACA,cAAC,EAAD,CAAaf,cAAeA,IAC5B,6BAEQkD,EAAWlB,KAAK,SAACU,GAAD,OACZ,cAAC,EAAD,CAAwBA,SAAUA,GAApBA,Y,MCRtCS,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.0ebb1a10.chunk.js","sourcesContent":["import React,{useState,useRef,useEffect} from 'react';\n\nfunction AddCategory({setCategories}) {\n    const [inputValue, setinputValue] = useState('');\n    const input = useRef();\n\n    const updateInput = () => {\n        setinputValue(input.current.value);\n    }\n\n    const handleSubmit = e =>{\n        e.preventDefault();\n        if( inputValue.trim().length > 2){\n            setCategories( antCat => [inputValue,...antCat]);\n            setinputValue( '' );\n        }\n    }\n\n    useEffect(()=>{\n        input.current.focus();\n    });\n\n    return (\n        <form onSubmit={handleSubmit} className=\"search\">\n            <input \n                type=\"text\" \n                value={inputValue} \n                onChange={updateInput}\n                ref={input}\n                placeholder='Search on me! after that type enter'\n            /> \n        </form>\n    )\n}\n\nexport default AddCategory\n","export const getGifs = async (termino) => {\n    const limit = 10;\n    const apiKey = '8WJJ3ggOa8Nec8Q7tNm701DBWfyStiwY';\n    const busqueda = encodeURI(termino);\n    const url = `https://api.giphy.com/v1/gifs/search?q=${busqueda}&limit=${limit}&api_key=${apiKey}`;\n\n    const results = await fetch(url);\n    const {data} = await results.json();\n\n    const gifs = data.map( img => {\n        return {\n            id: img.id,\n            title: img.title,\n            url: img.images?.downsized_medium.url\n        }\n    });\n\n    return gifs;\n}","import React from 'react'\n\nfunction GridGifItem({url,title}) {\n    return (\n        <div className=\"grid-item\">\n            <img src={url} alt={title}/>\n            <p>{title}</p>\n        </div>\n    )\n}\n\nexport default GridGifItem\n","import React from 'react';\nimport {useFetchGifs} from '../hooks/useFetchGifs'\n\nimport GridGifItem from './GridGifItem';\n\nfunction GifGrid({category}) {\n    const {data:images,loading} = useFetchGifs(category);\n\n    return (\n        <div className=\"grid-container\">\n            <hr/>\n            <h3>{category}</h3>\n            <hr/>\n            { loading ? (\n                <div>Loading...</div>\n            ) : (\n                <div className=\"grid-content\">\n                    {\n                        images.map((image) => (\n                            <GridGifItem \n                                key={image.id} \n                                url={image.url} \n                                title={image.title}\n                            />\n                        ))\n                    }\n                </div>\n            )}            \n        </div>\n    )\n}\n\nexport default GifGrid\n","import {useState,useEffect} from 'react';\nimport {getGifs} from '../helpers/getGif'\n\nexport const useFetchGifs = (category) => {\n    const [state, setState] = useState({\n        data: [],\n        loading: true\n    });\n\n    useEffect(() => {\n        getGifs(category)\n            .then(images => {\n                setState({\n                    data: images,\n                    loading: false\n                });\n            })\n    }, [])\n\n    return state;\n}","import React,{useState} from 'react';\nimport AddCategory from './components/AddCategory';\nimport GifGrid from './components/GifGrid';\n\nfunction GifEXpertApp() {\n    const [categories, setCategories] = useState(['One punch']);\n    return (\n        <div className='container-app'>\n            <h2>GifExpertApp</h2>\n            <AddCategory setCategories={setCategories} />\n            <ul>\n                {\n                    categories.map( (category) => (\n                        <GifGrid key={category} category={category}/>\n                    ))\n                }\n            </ul>\n        </div>\n    )\n}\n\nexport default GifEXpertApp\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifEXpertApp'\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <GifExpertApp/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}